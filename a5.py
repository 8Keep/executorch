==== exir.capture:
_capture.py: exir capture
==== Printing edge.dump():
graph():
    %arg0_1 : [num_users=1] = placeholder[target=arg0_1]
    %arg1_1 : [num_users=1] = placeholder[target=arg1_1]
    %arg2_1 : [num_users=1] = placeholder[target=arg2_1]
    %aten_permute_copy_default : [num_users=1] = call_function[target=executorch.exir.dialects.edge._ops.aten.permute_copy.default](args = (%arg0_1, [1, 0]), kwargs = {})
    %aten_addmm_default : [num_users=1] = call_function[target=executorch.exir.dialects.edge._ops.aten.addmm.default](args = (%arg1_1, %arg2_1, %aten_permute_copy_default), kwargs = {})
    return (aten_addmm_default,)
==== Running to_executorch() passes:
_program.py: to_executorch
_program.py: ExecutorchProgram __init__
==== Printing program:
Program(version=0, execution_plan=[ExecutionPlan(name='forward', container_meta_type=ContainerMetadata(encoded_inp_str='[1, {"type": "builtins.tuple", "context": "null", "children_spec": [{"type": "builtins.tuple", "context": "null", "children_spec": [{"type": null, "context": null, "children_spec": []}]}, {"type": "builtins.dict", "context": "[]", "children_spec": []}]}]', encoded_out_str='[1, {"type": null, "context": null, "children_spec": []}]'), values=[EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=True, layout=0, constant_buffer_idx=1, allocation_info=None, shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10], dim_order=[0], requires_grad=True, layout=0, constant_buffer_idx=2, allocation_info=None, shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=False, layout=0, constant_buffer_idx=0, allocation_info=AllocationDetails(memory_id=1, memory_offset=448), shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=False, layout=0, constant_buffer_idx=0, allocation_info=AllocationDetails(memory_id=1, memory_offset=848), shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Int(int_val=1)), EValue(val=Int(int_val=0)), EValue(val=IntList(items=[4, 5])), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=False, layout=0, constant_buffer_idx=0, allocation_info=AllocationDetails(memory_id=1, memory_offset=0), shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Int(int_val=1)), EValue(val=Int(int_val=1))], inputs=[2], outputs=[7], chains=[Chain(inputs=[], outputs=[], instructions=[Instruction(instr_args=KernelCall(op_index=0, args=[0, 6, 3, 3])), Instruction(instr_args=KernelCall(op_index=1, args=[1, 2, 3, 8, 9, 7, 7]))], stacktrace=None)], operators=[Operator(name='aten::permute_copy', overload='out'), Operator(name='aten::addmm', overload='out')], delegates=[], non_const_buffer_sizes=[0, 1248])], constant_buffer=[Buffer(storage=b''), Buffer(storage=b"\x12\xa1\x19\xbeA%1\xbe\x8e\x8eG\xbd\x16{\x0b>G.\xa6<\xc9A\x87\xbe\x04\xac~\xbe\xa7\t*\xbe\xb6\x89-\xbeNf\x8f>\x12-\\\xbb2G%\xbd\xb5'\t>H'4>?v\xa1\xbeZ\xbb\xe9=\xb8z\x97\xbe\xa98\xda\xbd'\x1a\xa0\xbe\x1bWU\xbdJ\x14\x8e\xbe\xd5\x12\xad\xbc[\n\xee<`\xd8\x17\xbe\x80\x13\x0b\xbe~\xb3\x96=\x02\x16\x11>\x19\xa3\x7f=\xc2b\x9a=b\x13\x13>\x8b\xb9D\xbe\xabES\xbe,\xcd^\xbd\xefk\x8c\xbe\x11\xd6\x9e\xbd\x9cpH>1\x98\x95\xbd\xfa\xd0\xbc=\xb7\xff\xff\xbd\xb1\x91,>\x92\xc3\xb8=jd\x89=\xa0\xb9\xa7=@\xd5e>\xe0\x87\xf1\xbd\x01!\x8d\xbd\xf4\x8a$\xbe\xf8\xd8T\xbd\xf3\xb3\x9d\xbek\xab\x1b=P[\xa8\xbb\x95\xc5S\xbe~\xbe\xc2<\xc7\xe9\x92>\xc4\\\xbd<\xb9\xf2\xb7\xbd\xb1a\x9d\xbd\xa4bv>a\x96\xfd\xbd\xf9`<\xbd\xe39\x86>-`+\xbc\xba\xaa\xe5= \x82\x9f>+S9\xbe\n\xf8N>C\x86\xd5\xbc\xee\xe9\xae=\xd5\xe5j>\x95\xfd|=\x12\xd0\x8b>n\xd4\x95=\x90\x1e\r\xbeS\xa5g\xbd\xab0^\xbe\xab\xf2H<\xca?V>{\xf0.>&8D><\x0f\x88>\x1a\xf1\xc7\xbd\x96J\xf7<\xff\xcd\xed=\x1ac\xa5<9\xef|>y8\x12=K\xf8:\xbeCQx\xbe\xb9h\xd3=\xf2,\x8e\xbc\x12\xcdO>\x93\x80\xcc= \xdd\x9a\xbe\xf6vc\xbe\x16X\x00\xbe\x19M\xf1=\xeb\x1a\x8b\xbeu\xc5\xf0<C@\x1a\xbe\xd6\xba\xb8="), Buffer(storage=b'\x0b\xc3Y\xbd)\xb4\x95>\\p\x94\xbd\x88\xff4\xbeK>\x10\xbe\xb3X$>\xe8W|\xbe\x11\xc4T>\xd9K`>Y)\x99>')], backend_delegate_data=[], segments=[])
==== Print buffer:
_program.py: serialize_pte_binary
serialize/_program.py: _extract_segments
serialize/_program.py: moving constant buffers
serialize/_program.py: constants [], program.segments [DataSegment(offset=0, size=440)]
serialize/_program.py: segments contains: [b"\x12\xa1\x19\xbeA%1\xbe\x8e\x8eG\xbd\x16{\x0b>G.\xa6<\xc9A\x87\xbe\x04\xac~\xbe\xa7\t*\xbe\xb6\x89-\xbeNf\x8f>\x12-\\\xbb2G%\xbd\xb5'\t>H'4>?v\xa1\xbeZ\xbb\xe9=\xb8z\x97\xbe\xa98\xda\xbd'\x1a\xa0\xbe\x1bWU\xbdJ\x14\x8e\xbe\xd5\x12\xad\xbc[\n\xee<`\xd8\x17\xbe\x80\x13\x0b\xbe~\xb3\x96=\x02\x16\x11>\x19\xa3\x7f=\xc2b\x9a=b\x13\x13>\x8b\xb9D\xbe\xabES\xbe,\xcd^\xbd\xefk\x8c\xbe\x11\xd6\x9e\xbd\x9cpH>1\x98\x95\xbd\xfa\xd0\xbc=\xb7\xff\xff\xbd\xb1\x91,>\x92\xc3\xb8=jd\x89=\xa0\xb9\xa7=@\xd5e>\xe0\x87\xf1\xbd\x01!\x8d\xbd\xf4\x8a$\xbe\xf8\xd8T\xbd\xf3\xb3\x9d\xbek\xab\x1b=P[\xa8\xbb\x95\xc5S\xbe~\xbe\xc2<\xc7\xe9\x92>\xc4\\\xbd<\xb9\xf2\xb7\xbd\xb1a\x9d\xbd\xa4bv>a\x96\xfd\xbd\xf9`<\xbd\xe39\x86>-`+\xbc\xba\xaa\xe5= \x82\x9f>+S9\xbe\n\xf8N>C\x86\xd5\xbc\xee\xe9\xae=\xd5\xe5j>\x95\xfd|=\x12\xd0\x8b>n\xd4\x95=\x90\x1e\r\xbeS\xa5g\xbd\xab0^\xbe\xab\xf2H<\xca?V>{\xf0.>&8D><\x0f\x88>\x1a\xf1\xc7\xbd\x96J\xf7<\xff\xcd\xed=\x1ac\xa5<9\xef|>y8\x12=K\xf8:\xbeCQx\xbe\xb9h\xd3=\xf2,\x8e\xbc\x12\xcdO>\x93\x80\xcc= \xdd\x9a\xbe\xf6vc\xbe\x16X\x00\xbe\x19M\xf1=\xeb\x1a\x8b\xbeu\xc5\xf0<C@\x1a\xbe\xd6\xba\xb8=\x0b\xc3Y\xbd)\xb4\x95>\\p\x94\xbd\x88\xff4\xbeK>\x10\xbe\xb3X$>\xe8W|\xbe\x11\xc4T>\xd9K`>Y)\x99>"]
_serialize/_program.py: _program_to_json: program=Program(version=0, execution_plan=[ExecutionPlan(name='forward', container_meta_type=ContainerMetadata(encoded_inp_str='[1, {"type": "builtins.tuple", "context": "null", "children_spec": [{"type": "builtins.tuple", "context": "null", "children_spec": [{"type": null, "context": null, "children_spec": []}]}, {"type": "builtins.dict", "context": "[]", "children_spec": []}]}]', encoded_out_str='[1, {"type": null, "context": null, "children_spec": []}]'), values=[EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=True, layout=0, constant_buffer_idx=1, allocation_info=None, shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10], dim_order=[0], requires_grad=True, layout=0, constant_buffer_idx=2, allocation_info=None, shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=False, layout=0, constant_buffer_idx=0, allocation_info=AllocationDetails(memory_id=1, memory_offset=448), shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=False, layout=0, constant_buffer_idx=0, allocation_info=AllocationDetails(memory_id=1, memory_offset=848), shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Int(int_val=1)), EValue(val=Int(int_val=0)), EValue(val=IntList(items=[4, 5])), EValue(val=Tensor(scalar_type=<ScalarType.FLOAT: 6>, storage_offset=0, sizes=[10, 10], dim_order=[0, 1], requires_grad=False, layout=0, constant_buffer_idx=0, allocation_info=AllocationDetails(memory_id=1, memory_offset=0), shape_dynamism=<TensorShapeDynamism.STATIC: 0>)), EValue(val=Int(int_val=1)), EValue(val=Int(int_val=1))], inputs=[2], outputs=[7], chains=[Chain(inputs=[], outputs=[], instructions=[Instruction(instr_args=KernelCall(op_index=0, args=[0, 6, 3, 3])), Instruction(instr_args=KernelCall(op_index=1, args=[1, 2, 3, 8, 9, 7, 7]))], stacktrace=None)], operators=[Operator(name='aten::permute_copy', overload='out'), Operator(name='aten::addmm', overload='out')], delegates=[], non_const_buffer_sizes=[0, 1248])], constant_buffer=[], backend_delegate_data=[], segments=[DataSegment(offset=0, size=440)])


_serialize/_flatbuffer.py: _program_json_to_flatbuffer. program_json: {"version": 0, "execution_plan": [{"name": "forward", "container_meta_type": {"encoded_inp_str": "[1, {\"type\": \"builtins.tuple\", \"context\": \"null\", \"children_spec\": [{\"type\": \"builtins.tuple\", \"context\": \"null\", \"children_spec\": [{\"type\": null, \"context\": null, \"children_spec\": []}]}, {\"type\": \"builtins.dict\", \"context\": \"[]\", \"children_spec\": []}]}]", "encoded_out_str": "[1, {\"type\": null, \"context\": null, \"children_spec\": []}]"}, "values": [{"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": true, "layout": 0, "constant_buffer_idx": 1, "allocation_info": null, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10], "dim_order": [0], "requires_grad": true, "layout": 0, "constant_buffer_idx": 2, "allocation_info": null, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": false, "layout": 0, "constant_buffer_idx": 0, "allocation_info": {"memory_id": 1, "memory_offset": 448}, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": false, "layout": 0, "constant_buffer_idx": 0, "allocation_info": {"memory_id": 1, "memory_offset": 848}, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"int_val": 1}, "val_type": "Int"}, {"val": {"int_val": 0}, "val_type": "Int"}, {"val": {"items": [4, 5]}, "val_type": "IntList"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": false, "layout": 0, "constant_buffer_idx": 0, "allocation_info": {"memory_id": 1, "memory_offset": 0}, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"int_val": 1}, "val_type": "Int"}, {"val": {"int_val": 1}, "val_type": "Int"}], "inputs": [2], "outputs": [7], "chains": [{"inputs": [], "outputs": [], "instructions": [{"instr_args": {"op_index": 0, "args": [0, 6, 3, 3]}, "instr_args_type": "KernelCall"}, {"instr_args": {"op_index": 1, "args": [1, 2, 3, 8, 9, 7, 7]}, "instr_args_type": "KernelCall"}], "stacktrace": null}], "operators": [{"name": "aten::permute_copy", "overload": "out"}, {"name": "aten::addmm", "overload": "out"}], "delegates": [], "non_const_buffer_sizes": [0, 1248]}], "constant_buffer": [], "backend_delegate_data": [], "segments": [{"offset": 0, "size": 440}]}


_serialize/_flatbuffer.py: program_json.encode('ascii'): b'{"version": 0, "execution_plan": [{"name": "forward", "container_meta_type": {"encoded_inp_str": "[1, {\\"type\\": \\"builtins.tuple\\", \\"context\\": \\"null\\", \\"children_spec\\": [{\\"type\\": \\"builtins.tuple\\", \\"context\\": \\"null\\", \\"children_spec\\": [{\\"type\\": null, \\"context\\": null, \\"children_spec\\": []}]}, {\\"type\\": \\"builtins.dict\\", \\"context\\": \\"[]\\", \\"children_spec\\": []}]}]", "encoded_out_str": "[1, {\\"type\\": null, \\"context\\": null, \\"children_spec\\": []}]"}, "values": [{"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": true, "layout": 0, "constant_buffer_idx": 1, "allocation_info": null, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10], "dim_order": [0], "requires_grad": true, "layout": 0, "constant_buffer_idx": 2, "allocation_info": null, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": false, "layout": 0, "constant_buffer_idx": 0, "allocation_info": {"memory_id": 1, "memory_offset": 448}, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": false, "layout": 0, "constant_buffer_idx": 0, "allocation_info": {"memory_id": 1, "memory_offset": 848}, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"int_val": 1}, "val_type": "Int"}, {"val": {"int_val": 0}, "val_type": "Int"}, {"val": {"items": [4, 5]}, "val_type": "IntList"}, {"val": {"scalar_type": 6, "storage_offset": 0, "sizes": [10, 10], "dim_order": [0, 1], "requires_grad": false, "layout": 0, "constant_buffer_idx": 0, "allocation_info": {"memory_id": 1, "memory_offset": 0}, "shape_dynamism": 0}, "val_type": "Tensor"}, {"val": {"int_val": 1}, "val_type": "Int"}, {"val": {"int_val": 1}, "val_type": "Int"}], "inputs": [2], "outputs": [7], "chains": [{"inputs": [], "outputs": [], "instructions": [{"instr_args": {"op_index": 0, "args": [0, 6, 3, 3]}, "instr_args_type": "KernelCall"}, {"instr_args": {"op_index": 1, "args": [1, 2, 3, 8, 9, 7, 7]}, "instr_args_type": "KernelCall"}], "stacktrace": null}], "operators": [{"name": "aten::permute_copy", "overload": "out"}, {"name": "aten::addmm", "overload": "out"}], "delegates": [], "non_const_buffer_sizes": [0, 1248]}], "constant_buffer": [], "backend_delegate_data": [], "segments": [{"offset": 0, "size": 440}]}'
_serialize/program.py: padded_header_length = 32, alignment: 16
_serialize/_program.py: appending segments. program_data b'8\x00\x00\x00ET12eh00\x18\x00\x00\x00p\x05\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x14\x00\x00\x00\x04\x00\x08\x00\x0c\x00\x10\x00\x0e\x00\x00\x008\x00\x00\x000\x00\x00\x00(\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x0c\x00\x00\x00\x08\x00\x10\x00\x00\x00\x04\x00\x08\x00\x00\x00\xb8\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x16\x00(\x00\x04\x00\x08\x00\x0c\x00\x10\x00\x14\x00\x18\x00\x1c\x00 \x00$\x00\x16\x00\x00\x00\xcc\x04\x00\x00x\x03\x00\x00D\x01\x00\x008\x01\x00\x00,\x01\x00\x00\x88\x00\x00\x00(\x00\x00\x00 \x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00,\x00\x00\x00\x04\x00\x00\x00\xd8\xfc\xff\xff\x10\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00out\x00\x0b\x00\x00\x00aten::addmm\x00\xfc\xfc\xff\xff\x10\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00out\x00\x12\x00\x00\x00aten::permute_copy\x00\x00\x01\x00\x00\x00\x10\x00\x00\x00\x00\x00\n\x00\x10\x00\x04\x00\x08\x00\x0c\x00\n\x00\x00\x00\x84\x00\x00\x00|\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00\x04\x00\x00\x00\xa4\xfd\xff\xff\x00\x00\x00\x01\x04\x00\x00\x00d\xfd\xff\xff\x01\x00\x00\x00\x04\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\x07\x00\x00\x00\x07\x00\x00\x00\xdc\xfd\xff\xff\x00\x00\x00\x01\x0c\x00\x00\x00\x08\x00\x08\x00\x00\x00\x04\x00\x08\x00\x00\x00\x04\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\xe0\x01\x00\x00\xa4\x01\x00\x00L\x01\x00\x00\x00\x01\x00\x00\xd8\x00\x00\x00\xc0\x00\x00\x00\x88\x00\x00\x00H\x00\x00\x00(\x00\x00\x00\x04\x00\x00\x00\xdc\xfe\xff\xff\x00\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x06\x00\x0c\x00\x04\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00p\xfe\xff\xff\x00\x00\x00\x02\x04\x00\x00\x00^\xff\xff\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8c\xfe\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\x0e\xff\xff\xff\x00\x00\x00\x06\x1c\x00\x00\x00\x10\x00\x00\x00\x04\x00\x00\x00\xd6\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00T\xff\xff\xff\x00\x00\x00\x07\x0c\x00\x00\x00\x00\x00\x06\x00\x08\x00\x04\x00\x06\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\xfe\xff\xff\x00\x00\x00\x02\x08\x00\x00\x00\x04\x00\x04\x00\x04\x00\x00\x00\x9c\xff\xff\xff\x00\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x06\x00\x10\x00\x04\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x004\xff\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\xb6\xff\xff\xff\x00\x00\x00\x06 \x00\x00\x00\x14\x00\x00\x00\x04\x00\x00\x00\x08\xff\xff\xff\x01\x00\x00\x00P\x03\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x08\x00\x0e\x00\x07\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x05\x18\x00\x00\x00\x00\x00\x12\x00\x14\x00\x07\x00\x00\x00\x08\x00\x0c\x00\x00\x00\x00\x00\x10\x00\x12\x00\x00\x00\x00\x00\x00\x06 \x00\x00\x00\x14\x00\x00\x00\x04\x00\x00\x00d\xff\xff\xff\x01\x00\x00\x00\xc0\x01\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\xd0\xff\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\xc8\xff\xff\xff\x00\x00\x06\x01\x14\x00\x00\x00\x08\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\n\x00\x00\x00\x08\x00\x0c\x00\x07\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x05\x14\x00\x00\x00\x10\x00\x14\x00\x06\x00\x00\x00\x08\x00\x0c\x00\x07\x00\x10\x00\x10\x00\x00\x00\x00\x00\x06\x01\x14\x00\x00\x00\x08\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x08\x00\x0c\x00\x04\x00\x08\x00\x08\x00\x00\x00H\x00\x00\x00\x04\x00\x00\x009\x00\x00\x00[1, {"type": null, "context": null, "children_spec": []}]\x00\x00\x00\xfe\x00\x00\x00[1, {"type": "builtins.tuple", "context": "null", "children_spec": [{"type": "builtins.tuple", "context": "null", "children_spec": [{"type": null, "context": null, "children_spec": []}]}, {"type": "builtins.dict", "context": "[]", "children_spec": []}]}]\x00\x00\x07\x00\x00\x00forward\x00', segments [b"\x12\xa1\x19\xbeA%1\xbe\x8e\x8eG\xbd\x16{\x0b>G.\xa6<\xc9A\x87\xbe\x04\xac~\xbe\xa7\t*\xbe\xb6\x89-\xbeNf\x8f>\x12-\\\xbb2G%\xbd\xb5'\t>H'4>?v\xa1\xbeZ\xbb\xe9=\xb8z\x97\xbe\xa98\xda\xbd'\x1a\xa0\xbe\x1bWU\xbdJ\x14\x8e\xbe\xd5\x12\xad\xbc[\n\xee<`\xd8\x17\xbe\x80\x13\x0b\xbe~\xb3\x96=\x02\x16\x11>\x19\xa3\x7f=\xc2b\x9a=b\x13\x13>\x8b\xb9D\xbe\xabES\xbe,\xcd^\xbd\xefk\x8c\xbe\x11\xd6\x9e\xbd\x9cpH>1\x98\x95\xbd\xfa\xd0\xbc=\xb7\xff\xff\xbd\xb1\x91,>\x92\xc3\xb8=jd\x89=\xa0\xb9\xa7=@\xd5e>\xe0\x87\xf1\xbd\x01!\x8d\xbd\xf4\x8a$\xbe\xf8\xd8T\xbd\xf3\xb3\x9d\xbek\xab\x1b=P[\xa8\xbb\x95\xc5S\xbe~\xbe\xc2<\xc7\xe9\x92>\xc4\\\xbd<\xb9\xf2\xb7\xbd\xb1a\x9d\xbd\xa4bv>a\x96\xfd\xbd\xf9`<\xbd\xe39\x86>-`+\xbc\xba\xaa\xe5= \x82\x9f>+S9\xbe\n\xf8N>C\x86\xd5\xbc\xee\xe9\xae=\xd5\xe5j>\x95\xfd|=\x12\xd0\x8b>n\xd4\x95=\x90\x1e\r\xbeS\xa5g\xbd\xab0^\xbe\xab\xf2H<\xca?V>{\xf0.>&8D><\x0f\x88>\x1a\xf1\xc7\xbd\x96J\xf7<\xff\xcd\xed=\x1ac\xa5<9\xef|>y8\x12=K\xf8:\xbeCQx\xbe\xb9h\xd3=\xf2,\x8e\xbc\x12\xcdO>\x93\x80\xcc= \xdd\x9a\xbe\xf6vc\xbe\x16X\x00\xbe\x19M\xf1=\xeb\x1a\x8b\xbeu\xc5\xf0<C@\x1a\xbe\xd6\xba\xb8=\x0b\xc3Y\xbd)\xb4\x95>\\p\x94\xbd\x88\xff4\xbeK>\x10\xbe\xb3X$>\xe8W|\xbe\x11\xc4T>\xd9K`>Y)\x99>"], segment_alignment 4096, segment_table [DataSegment(offset=0, size=440)], base_offset 4096
_serialize/_program.py: _append_segments
_serialize/_program.py: i 0, segment b'8\x00\x00\x00ET12eh00\x18\x00\x00\x00p\x05\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x14\x00\x00\x00\x04\x00\x08\x00\x0c\x00\x10\x00\x0e\x00\x00\x008\x00\x00\x000\x00\x00\x00(\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x0c\x00\x00\x00\x08\x00\x10\x00\x00\x00\x04\x00\x08\x00\x00\x00\xb8\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x16\x00(\x00\x04\x00\x08\x00\x0c\x00\x10\x00\x14\x00\x18\x00\x1c\x00 \x00$\x00\x16\x00\x00\x00\xcc\x04\x00\x00x\x03\x00\x00D\x01\x00\x008\x01\x00\x00,\x01\x00\x00\x88\x00\x00\x00(\x00\x00\x00 \x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00,\x00\x00\x00\x04\x00\x00\x00\xd8\xfc\xff\xff\x10\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00out\x00\x0b\x00\x00\x00aten::addmm\x00\xfc\xfc\xff\xff\x10\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00out\x00\x12\x00\x00\x00aten::permute_copy\x00\x00\x01\x00\x00\x00\x10\x00\x00\x00\x00\x00\n\x00\x10\x00\x04\x00\x08\x00\x0c\x00\n\x00\x00\x00\x84\x00\x00\x00|\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00\x04\x00\x00\x00\xa4\xfd\xff\xff\x00\x00\x00\x01\x04\x00\x00\x00d\xfd\xff\xff\x01\x00\x00\x00\x04\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\x07\x00\x00\x00\x07\x00\x00\x00\xdc\xfd\xff\xff\x00\x00\x00\x01\x0c\x00\x00\x00\x08\x00\x08\x00\x00\x00\x04\x00\x08\x00\x00\x00\x04\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\xe0\x01\x00\x00\xa4\x01\x00\x00L\x01\x00\x00\x00\x01\x00\x00\xd8\x00\x00\x00\xc0\x00\x00\x00\x88\x00\x00\x00H\x00\x00\x00(\x00\x00\x00\x04\x00\x00\x00\xdc\xfe\xff\xff\x00\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x06\x00\x0c\x00\x04\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00p\xfe\xff\xff\x00\x00\x00\x02\x04\x00\x00\x00^\xff\xff\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8c\xfe\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\x0e\xff\xff\xff\x00\x00\x00\x06\x1c\x00\x00\x00\x10\x00\x00\x00\x04\x00\x00\x00\xd6\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00T\xff\xff\xff\x00\x00\x00\x07\x0c\x00\x00\x00\x00\x00\x06\x00\x08\x00\x04\x00\x06\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\xfe\xff\xff\x00\x00\x00\x02\x08\x00\x00\x00\x04\x00\x04\x00\x04\x00\x00\x00\x9c\xff\xff\xff\x00\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x06\x00\x10\x00\x04\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x004\xff\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\xb6\xff\xff\xff\x00\x00\x00\x06 \x00\x00\x00\x14\x00\x00\x00\x04\x00\x00\x00\x08\xff\xff\xff\x01\x00\x00\x00P\x03\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x08\x00\x0e\x00\x07\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x05\x18\x00\x00\x00\x00\x00\x12\x00\x14\x00\x07\x00\x00\x00\x08\x00\x0c\x00\x00\x00\x00\x00\x10\x00\x12\x00\x00\x00\x00\x00\x00\x06 \x00\x00\x00\x14\x00\x00\x00\x04\x00\x00\x00d\xff\xff\xff\x01\x00\x00\x00\xc0\x01\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\xd0\xff\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\xc8\xff\xff\xff\x00\x00\x06\x01\x14\x00\x00\x00\x08\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\n\x00\x00\x00\x08\x00\x0c\x00\x07\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x05\x14\x00\x00\x00\x10\x00\x14\x00\x06\x00\x00\x00\x08\x00\x0c\x00\x07\x00\x10\x00\x10\x00\x00\x00\x00\x00\x06\x01\x14\x00\x00\x00\x08\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x08\x00\x0c\x00\x04\x00\x08\x00\x08\x00\x00\x00H\x00\x00\x00\x04\x00\x00\x009\x00\x00\x00[1, {"type": null, "context": null, "children_spec": []}]\x00\x00\x00\xfe\x00\x00\x00[1, {"type": "builtins.tuple", "context": "null", "children_spec": [{"type": "builtins.tuple", "context": "null", "children_spec": [{"type": null, "context": null, "children_spec": []}]}, {"type": "builtins.dict", "context": "[]", "children_spec": []}]}]\x00\x00\x07\x00\x00\x00forward\x00'
_serialize/_program.py: offset 0, alignment 4096, pad_length 0
_serialize/_program.py: i 1, segment b"\x12\xa1\x19\xbeA%1\xbe\x8e\x8eG\xbd\x16{\x0b>G.\xa6<\xc9A\x87\xbe\x04\xac~\xbe\xa7\t*\xbe\xb6\x89-\xbeNf\x8f>\x12-\\\xbb2G%\xbd\xb5'\t>H'4>?v\xa1\xbeZ\xbb\xe9=\xb8z\x97\xbe\xa98\xda\xbd'\x1a\xa0\xbe\x1bWU\xbdJ\x14\x8e\xbe\xd5\x12\xad\xbc[\n\xee<`\xd8\x17\xbe\x80\x13\x0b\xbe~\xb3\x96=\x02\x16\x11>\x19\xa3\x7f=\xc2b\x9a=b\x13\x13>\x8b\xb9D\xbe\xabES\xbe,\xcd^\xbd\xefk\x8c\xbe\x11\xd6\x9e\xbd\x9cpH>1\x98\x95\xbd\xfa\xd0\xbc=\xb7\xff\xff\xbd\xb1\x91,>\x92\xc3\xb8=jd\x89=\xa0\xb9\xa7=@\xd5e>\xe0\x87\xf1\xbd\x01!\x8d\xbd\xf4\x8a$\xbe\xf8\xd8T\xbd\xf3\xb3\x9d\xbek\xab\x1b=P[\xa8\xbb\x95\xc5S\xbe~\xbe\xc2<\xc7\xe9\x92>\xc4\\\xbd<\xb9\xf2\xb7\xbd\xb1a\x9d\xbd\xa4bv>a\x96\xfd\xbd\xf9`<\xbd\xe39\x86>-`+\xbc\xba\xaa\xe5= \x82\x9f>+S9\xbe\n\xf8N>C\x86\xd5\xbc\xee\xe9\xae=\xd5\xe5j>\x95\xfd|=\x12\xd0\x8b>n\xd4\x95=\x90\x1e\r\xbeS\xa5g\xbd\xab0^\xbe\xab\xf2H<\xca?V>{\xf0.>&8D><\x0f\x88>\x1a\xf1\xc7\xbd\x96J\xf7<\xff\xcd\xed=\x1ac\xa5<9\xef|>y8\x12=K\xf8:\xbeCQx\xbe\xb9h\xd3=\xf2,\x8e\xbc\x12\xcdO>\x93\x80\xcc= \xdd\x9a\xbe\xf6vc\xbe\x16X\x00\xbe\x19M\xf1=\xeb\x1a\x8b\xbeu\xc5\xf0<C@\x1a\xbe\xd6\xba\xb8=\x0b\xc3Y\xbd)\xb4\x95>\\p\x94\xbd\x88\xff4\xbeK>\x10\xbe\xb3X$>\xe8W|\xbe\x11\xc4T>\xd9K`>Y)\x99>"
_serialize/_program.py: offset 1392, alignment 4096, pad_length 2704

b'8\x00\x00\x00ET12eh00\x18\x00\x00\x00p\x05\x00\x00\x00\x00\x00\x00\x00\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0e\x00\x14\x00\x00\x00\x04\x00\x08\x00\x0c\x00\x10\x00\x0e\x00\x00\x008\x00\x00\x000\x00\x00\x00(\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x0c\x00\x00\x00\x08\x00\x10\x00\x00\x00\x04\x00\x08\x00\x00\x00\xb8\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x1c\x00\x00\x00\x00\x00\x16\x00(\x00\x04\x00\x08\x00\x0c\x00\x10\x00\x14\x00\x18\x00\x1c\x00 \x00$\x00\x16\x00\x00\x00\xcc\x04\x00\x00x\x03\x00\x00D\x01\x00\x008\x01\x00\x00,\x01\x00\x00\x88\x00\x00\x00(\x00\x00\x00 \x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00,\x00\x00\x00\x04\x00\x00\x00\xd8\xfc\xff\xff\x10\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00out\x00\x0b\x00\x00\x00aten::addmm\x00\xfc\xfc\xff\xff\x10\x00\x00\x00\x04\x00\x00\x00\x03\x00\x00\x00out\x00\x12\x00\x00\x00aten::permute_copy\x00\x00\x01\x00\x00\x00\x10\x00\x00\x00\x00\x00\n\x00\x10\x00\x04\x00\x08\x00\x0c\x00\n\x00\x00\x00\x84\x00\x00\x00|\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00@\x00\x00\x00\x04\x00\x00\x00\xa4\xfd\xff\xff\x00\x00\x00\x01\x04\x00\x00\x00d\xfd\xff\xff\x01\x00\x00\x00\x04\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x08\x00\x00\x00\t\x00\x00\x00\x07\x00\x00\x00\x07\x00\x00\x00\xdc\xfd\xff\xff\x00\x00\x00\x01\x0c\x00\x00\x00\x08\x00\x08\x00\x00\x00\x04\x00\x08\x00\x00\x00\x04\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x03\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x07\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\xe0\x01\x00\x00\xa4\x01\x00\x00L\x01\x00\x00\x00\x01\x00\x00\xd8\x00\x00\x00\xc0\x00\x00\x00\x88\x00\x00\x00H\x00\x00\x00(\x00\x00\x00\x04\x00\x00\x00\xdc\xfe\xff\xff\x00\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x06\x00\x0c\x00\x04\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00p\xfe\xff\xff\x00\x00\x00\x02\x04\x00\x00\x00^\xff\xff\xff\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x8c\xfe\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\x0e\xff\xff\xff\x00\x00\x00\x06\x1c\x00\x00\x00\x10\x00\x00\x00\x04\x00\x00\x00\xd6\xff\xff\xff\x01\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00T\xff\xff\xff\x00\x00\x00\x07\x0c\x00\x00\x00\x00\x00\x06\x00\x08\x00\x04\x00\x06\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfc\xfe\xff\xff\x00\x00\x00\x02\x08\x00\x00\x00\x04\x00\x04\x00\x04\x00\x00\x00\x9c\xff\xff\xff\x00\x00\x00\x02\x0c\x00\x00\x00\x00\x00\x06\x00\x10\x00\x04\x00\x06\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x004\xff\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\xb6\xff\xff\xff\x00\x00\x00\x06 \x00\x00\x00\x14\x00\x00\x00\x04\x00\x00\x00\x08\xff\xff\xff\x01\x00\x00\x00P\x03\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x08\x00\x0e\x00\x07\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x05\x18\x00\x00\x00\x00\x00\x12\x00\x14\x00\x07\x00\x00\x00\x08\x00\x0c\x00\x00\x00\x00\x00\x10\x00\x12\x00\x00\x00\x00\x00\x00\x06 \x00\x00\x00\x14\x00\x00\x00\x04\x00\x00\x00d\xff\xff\xff\x01\x00\x00\x00\xc0\x01\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\xd0\xff\xff\xff\x00\x00\x00\x05\x04\x00\x00\x00\xc8\xff\xff\xff\x00\x00\x06\x01\x14\x00\x00\x00\x08\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\n\x00\x00\x00\x08\x00\x0c\x00\x07\x00\x08\x00\x08\x00\x00\x00\x00\x00\x00\x05\x14\x00\x00\x00\x10\x00\x14\x00\x06\x00\x00\x00\x08\x00\x0c\x00\x07\x00\x10\x00\x10\x00\x00\x00\x00\x00\x06\x01\x14\x00\x00\x00\x08\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x00\x01\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\n\x00\x00\x00\x08\x00\x0c\x00\x04\x00\x08\x00\x08\x00\x00\x00H\x00\x00\x00\x04\x00\x00\x009\x00\x00\x00[1, {"type": null, "context": null, "children_spec": []}]\x00\x00\x00\xfe\x00\x00\x00[1, {"type": "builtins.tuple", "context": "null", "children_spec": [{"type": "builtins.tuple", "context": "null", "children_spec": [{"type": null, "context": null, "children_spec": []}]}, {"type": "builtins.dict", "context": "[]", "children_spec": []}]}]\x00\x00\x07\x00\x00\x00forward\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x12\xa1\x19\xbeA%1\xbe\x8e\x8eG\xbd\x16{\x0b>G.\xa6<\xc9A\x87\xbe\x04\xac~\xbe\xa7\t*\xbe\xb6\x89-\xbeNf\x8f>\x12-\\\xbb2G%\xbd\xb5\'\t>H\'4>?v\xa1\xbeZ\xbb\xe9=\xb8z\x97\xbe\xa98\xda\xbd\'\x1a\xa0\xbe\x1bWU\xbdJ\x14\x8e\xbe\xd5\x12\xad\xbc[\n\xee<`\xd8\x17\xbe\x80\x13\x0b\xbe~\xb3\x96=\x02\x16\x11>\x19\xa3\x7f=\xc2b\x9a=b\x13\x13>\x8b\xb9D\xbe\xabES\xbe,\xcd^\xbd\xefk\x8c\xbe\x11\xd6\x9e\xbd\x9cpH>1\x98\x95\xbd\xfa\xd0\xbc=\xb7\xff\xff\xbd\xb1\x91,>\x92\xc3\xb8=jd\x89=\xa0\xb9\xa7=@\xd5e>\xe0\x87\xf1\xbd\x01!\x8d\xbd\xf4\x8a$\xbe\xf8\xd8T\xbd\xf3\xb3\x9d\xbek\xab\x1b=P[\xa8\xbb\x95\xc5S\xbe~\xbe\xc2<\xc7\xe9\x92>\xc4\\\xbd<\xb9\xf2\xb7\xbd\xb1a\x9d\xbd\xa4bv>a\x96\xfd\xbd\xf9`<\xbd\xe39\x86>-`+\xbc\xba\xaa\xe5= \x82\x9f>+S9\xbe\n\xf8N>C\x86\xd5\xbc\xee\xe9\xae=\xd5\xe5j>\x95\xfd|=\x12\xd0\x8b>n\xd4\x95=\x90\x1e\r\xbeS\xa5g\xbd\xab0^\xbe\xab\xf2H<\xca?V>{\xf0.>&8D><\x0f\x88>\x1a\xf1\xc7\xbd\x96J\xf7<\xff\xcd\xed=\x1ac\xa5<9\xef|>y8\x12=K\xf8:\xbeCQx\xbe\xb9h\xd3=\xf2,\x8e\xbc\x12\xcdO>\x93\x80\xcc= \xdd\x9a\xbe\xf6vc\xbe\x16X\x00\xbe\x19M\xf1=\xeb\x1a\x8b\xbeu\xc5\xf0<C@\x1a\xbe\xd6\xba\xb8=\x0b\xc3Y\xbd)\xb4\x95>\\p\x94\xbd\x88\xff4\xbeK>\x10\xbe\xb3X$>\xe8W|\xbe\x11\xc4T>\xd9K`>Y)\x99>'
=== write to linear_a5.pte
